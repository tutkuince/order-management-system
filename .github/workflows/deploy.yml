name: build push image for deployment
on:
  push:
    branches:
      - master

jobs:
  sample-job-section:
    environment: action
    runs-on: ubuntu-latest
    env:
      ACTUATOR_ENDPOINTS: ${{ vars.ACTUATOR_EXPOSED_ENDPOINTS }}
    steps:
      - name: Get Source Code
        run: echo "Hey! I am printing something."
      - name: show host environment variable
        run: echo "actuator endpoint ${{ env.ACTUATOR_ENDPOINTS }}"

  build-job-section:
    environment: action
    runs-on: ubuntu-latest

    container: postgres
    services:
      postgres:
        image: 'postgres:16.2'
        env:
          POSTGRES_DB: ${{ vars.OMS_DB_NAME }}
          POSTGRES_USER: ${{ secrets.OMS_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.OMS_PASSWORD }}
        ports:
          - 5432:5432

    steps:
      - name: Get the Code
        uses: actions/checkout@v4

      - name: Set Up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: maven

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2

      - name: Run Maven Test
        env:
          OMS_USERNAME: ${{ secrets.OMS_USERNAME }}
          OMS_PASSWORD: ${{ secrets.OMS_PASSWORD }}
          OMS_HOST: ${{ vars.OMS_HOST }}
          OMS_PORT: ${{ vars.OMS_PORT }}
          OMS_DB_NAME: ${{ vars.OMS_DB_NAME }}
        run: mvn clean test

      - name: Output Info
        run: ls && mvn -version & ls /opt

      - name: Build with Maven
        run: mvn clean package -DskipTests -Dspring-boot.run.profiles=${{ vars.SPRING_PROFILE }}

      - name: List the Files
        run: ls target/**

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spring-oms-artifact
          path: |
            target/order-management-system-0.0.1-SNAPSHOT.jar
            Dockerfile
          overwrite: 'true'
          retention-days: 5
        

  push-image-section:
    environment: action
    needs: [build-job-section]
    runs-on: ubuntu-latest
    steps:
      - name: print something
        run: echo " job env "

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-oms-artifact

      - name: Output Downloaded Contents
        run: ls & ls target/**

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/spring-oms:1.0
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}